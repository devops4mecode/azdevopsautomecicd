trigger: 
  branches:
    include:
    - master 
  paths:
    include: 
    - '/BackEnd/*'

pr: 
  paths: 
    include: 
    - '/BackEnd/*'

pool:
  name: Azure Pipelines
  vmImage: 'windows-2022'

variables:
    BuildConfiguration: Release
    MajorVersion: 2
    MinorVersion: 0
    PatchNumber: 3

name: $(MajorVersion).$(MinorVersion).$(PatchNumber).$(Rev:r)

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(build.sourcesdirectory)/BackEnd/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(build.sourcesdirectory)/BackEnd/**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(build.sourcesdirectory)/BackEnd/**/*[Tt]est*/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) /p:Version=$(MajorVersion).$(MinorVersion).$(PatchNumber) /p:FileVersion=$(Build.BuildNumber) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Webapplication'
  inputs:
    ArtifactName:  'webappzip'
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish deployment PS script'
  inputs:
    ArtifactName:  'infrastructure-scripts'
    PathtoPublish: '$(build.sourcesdirectory)/BackEnd/infrastructure/'
  condition: succeededOrFailed()